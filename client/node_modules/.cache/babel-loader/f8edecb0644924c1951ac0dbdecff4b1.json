{"ast":null,"code":"var _jsxFileName = \"/Users/oshry/Projects/devconnector/client/src/components/profile/ProfileGithub.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ProfileGithub extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clientId: 'fd9fba3febf6d7c1e6de',\n      clientSecret: '0885cb690e07d2a93a6afb0891fb552fd9f7aa53',\n      count: 5,\n      sort: 'created: asc',\n      repos: []\n    };\n  }\n\n  componentDidMount() {\n    const username = this.props.username;\n    const _this$state = this.state,\n          count = _this$state.count,\n          sort = _this$state.sort,\n          clientId = _this$state.clientId,\n          clientSecret = _this$state.clientSecret;\n    fetch(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=\").concat(count, \"&sort=\").concat(sort, \"&client_id=\").concat(clientId, \"&client_secret=\").concat(clientSecret)).then(res => res.json()).then(data => {\n      if (this.refs.myRef) {\n        this.setState({\n          repos: data\n        });\n      }\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const repos = this.state.repos;\n    const repoItems = repos.map(repo => React.createElement(\"div\", {\n      key: repo.id,\n      className: \"card card-body mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: repo.html_url,\n      className: \"text-info\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, repo.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, repo.description)), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge badge-info mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Stars: \", repo.stargazers_count), React.createElement(\"span\", {\n      className: \"badge badge-secondary mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Watchers: \", repo.watchers_count), React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Forks: \", repo.forks_count)))));\n    return React.createElement(\"div\", {\n      ref: \"myRef\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Latest Github Repos\"), repoItems);\n  }\n\n}\n\nProfileGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default ProfileGithub;","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/components/profile/ProfileGithub.js"],"names":["React","Component","Link","PropTypes","ProfileGithub","constructor","props","state","clientId","clientSecret","count","sort","repos","componentDidMount","username","fetch","then","res","json","data","refs","myRef","setState","catch","err","console","log","render","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass ProfileGithub extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientId: 'fd9fba3febf6d7c1e6de',\n            clientSecret: '0885cb690e07d2a93a6afb0891fb552fd9f7aa53',\n            count: 5,\n            sort: 'created: asc',\n            repos: []\n        };\n    }\n\n    componentDidMount() {\n        const { username } = this.props;\n        const { count, sort, clientId, clientSecret } = this.state;\n\n        fetch(\n            `https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\n        )\n            .then(res => res.json())\n            .then(data => {\n                if (this.refs.myRef) {\n                    this.setState({ repos: data });\n                }\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        const { repos } = this.state;\n\n        const repoItems = repos.map(repo => (\n            <div key={repo.id} className=\"card card-body mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <h4>\n                            <Link to={repo.html_url} className=\"text-info\" target=\"_blank\">\n                                {repo.name}\n                            </Link>\n                        </h4>\n                        <p>{repo.description}</p>\n                    </div>\n                    <div className=\"col-md-6\">\n            <span className=\"badge badge-info mr-1\">\n              Stars: {repo.stargazers_count}\n            </span>\n                        <span className=\"badge badge-secondary mr-1\">\n              Watchers: {repo.watchers_count}\n            </span>\n                        <span className=\"badge badge-success\">\n              Forks: {repo.forks_count}\n            </span>\n                    </div>\n                </div>\n            </div>\n        ));\n        return (\n            <div ref=\"myRef\">\n                <hr />\n                <h3 className=\"mb-4\">Latest Github Repos</h3>\n                {repoItems}\n            </div>\n        );\n    }\n}\n\nProfileGithub.propTypes = {\n    username: PropTypes.string.isRequired\n};\n\nexport default ProfileGithub;\n"]},"metadata":{},"sourceType":"module"}