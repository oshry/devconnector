{"ast":null,"code":"var _jsxFileName = \"/Users/oshry/Projects/devconnector/client/src/components/profiles/ProfileItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport isEmpty from '../../validation/is-empty';\n\nclass ProfileItem extends Component {\n  render() {\n    const profile = this.props.profile;\n    return React.createElement(\"div\", {\n      className: \"card card-body bg-light mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: profile.user.avatar,\n      alt: \"\",\n      className: \"rounded-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \".col-lg-6 col-md-4 col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, profile.user.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, profile.status, \" \", isEmpty(profile.company) ? null : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"at \", profile.company)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, isEmpty(profile.location) ? null : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, profile.location)), React.createElement(Link, {\n      to: \"/profile/\".concat(profile.handle),\n      className: \"btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"View Profile\")), \"sss\", React.createElement(\"div\", {\n      className: \"col-md-4 d-none md-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Skill Set\"), React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, profile.skills.slice(0, 4).map((skill, index) => React.createElement(\"li\", {\n      key: index,\n      className: \"fa fa-check pr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-check pr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), skill)))));\n  }\n\n}\n\nProfileItem.proppTypes = {\n  profile: PropTypes.object.isRequired\n};\nexport default ProfileItem;","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/components/profiles/ProfileItem.js"],"names":["React","Component","PropTypes","Link","isEmpty","ProfileItem","render","profile","props","user","avatar","name","status","company","location","handle","skills","slice","map","skill","index","proppTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAChCK,EAAAA,MAAM,GAAG;AAAA,UACGC,OADH,GACe,KAAKC,KADpB,CACGD,OADH;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEA,OAAO,CAACE,IAAR,CAAaC,MAAvB;AAA+B,MAAA,GAAG,EAAC,EAAnC;AAAsC,MAAA,SAAS,EAAC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,OAAO,CAACE,IAAR,CAAaE,IAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKJ,OAAO,CAACK,MADb,OACsBR,OAAO,CAACG,OAAO,CAACM,OAAT,CAAP,GAA0B,IAA1B,GAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAUN,OAAO,CAACM,OAAlB,CADxD,CAFJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCT,OAAO,CAACG,OAAO,CAACO,QAAT,CAAP,GAA4B,IAA5B,GAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOP,OAAO,CAACO,QAAf,CADrC,CANJ,EASI,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcP,OAAO,CAACQ,MAAtB,CAAR;AAAwC,MAAA,SAAS,EAAC,cAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CALJ,SAkBI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKR,OAAO,CAACS,MAAR,CAAeC,KAAf,CAAqB,CAArB,EAAwB,CAAxB,EAA2BC,GAA3B,CAA+B,CAACC,KAAD,EAAQC,KAAR,KAC5B;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,SAAS,EAAC,kBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKD,KAFL,CADH,CADL,CAFJ,CAlBJ,CADJ;AAiCH;;AArC+B;;AAuCpCd,WAAW,CAACgB,UAAZ,GAAyB;AACjBd,EAAAA,OAAO,EAAEL,SAAS,CAACoB,MAAV,CAAiBC;AADT,CAAzB;AAIA,eAAelB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport isEmpty from '../../validation/is-empty';\n\nclass ProfileItem extends Component {\n    render() {\n        const { profile } = this.props;\n\n        return (\n            <div className=\"card card-body bg-light mb-3\">\n                <div className=\"col-2\">\n                    <img src={profile.user.avatar} alt=\"\" className=\"rounded-circle\"/>\n                </div>\n\n                <div className=\".col-lg-6 col-md-4 col-8\">\n                    <h3>{profile.user.name}</h3>\n                    <p>\n                        {profile.status} {isEmpty(profile.company)? null : (<span>at {profile.company}\n                        </span>)}\n                    </p>\n                    <p>\n                    {isEmpty(profile.location) ? null : (<span>{profile.location}</span>)}\n                    </p>\n                    <Link to={`/profile/${profile.handle}`} className=\"btn btn-info\">\n                        View Profile\n                    </Link>\n                </div>sss\n                <div className=\"col-md-4 d-none md-block\">\n                    <h4>Skill Set</h4>\n                    <ul className=\"list-group\">\n                        {profile.skills.slice(0, 4).map((skill, index) => (\n                            <li key={index} className=\"fa fa-check pr-1\">\n                                <i className=\"fa fa-check pr-1\" />\n                                {skill}\n                            </li>\n                        ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\nProfileItem.proppTypes = {\n        profile: PropTypes.object.isRequired\n}\n\nexport default ProfileItem;\n"]},"metadata":{},"sourceType":"module"}