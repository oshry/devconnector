{"ast":null,"code":"var _jsxFileName = \"/Users/oshry/Projects/devconnector/client/src/components/profile/Profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileCreds from './ProfileCreds';\nimport ProfileGithub from './ProfileGithub';\nimport Spinner from '../common/Spinner';\nimport { getProfileByHandle } from '../../actions/profileActions';\n\nclass Profile extends Component {\n  componentDidMount() {\n    if (this.props.match.params.handle) {\n      this.props.getProfileByHandle(this.props.match.params.handle);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.profile.profile === null && this.props.profile.loading) {\n      this.props.history.push('/not-found');\n    }\n  }\n\n  render() {\n    const _this$props$profile = this.props.profile,\n          profile = _this$props$profile.profile,\n          loading = _this$props$profile.loading;\n    let profileContent;\n\n    if (profile === null || loading) {\n      profileContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    } else {\n      profileContent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light mb-3 float-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Back To Profiles\")), React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(ProfileHeader, {\n        profile: profile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(ProfileAbout, {\n        profile: profile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(ProfileCreds, {\n        education: profile.education,\n        experience: profile.experience,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), profile.githubusername ? React.createElement(ProfileGithub, {\n        username: profile.githubusername,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"profile\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, profileContent))));\n  }\n\n}\n\nProfile.propTypes = {\n  getProfileByHandle: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfileByHandle\n})(Profile);","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/components/profile/Profile.js"],"names":["React","Component","connect","PropTypes","Link","ProfileHeader","ProfileAbout","ProfileCreds","ProfileGithub","Spinner","getProfileByHandle","Profile","componentDidMount","props","match","params","handle","componentWillReceiveProps","nextProps","profile","loading","history","push","render","profileContent","education","experience","githubusername","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileCreds from './ProfileCreds';\nimport ProfileGithub from './ProfileGithub';\nimport Spinner from '../common/Spinner';\nimport { getProfileByHandle } from '../../actions/profileActions';\n\nclass Profile extends Component {\n    componentDidMount() {\n        if (this.props.match.params.handle) {\n            this.props.getProfileByHandle(this.props.match.params.handle);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.profile.profile === null && this.props.profile.loading) {\n            this.props.history.push('/not-found');\n        }\n    }\n\n    render() {\n        const { profile, loading } = this.props.profile;\n        let profileContent;\n\n        if (profile === null || loading) {\n            profileContent = <Spinner />;\n        } else {\n            profileContent = (\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <Link to=\"/profiles\" className=\"btn btn-light mb-3 float-left\">\n                                Back To Profiles\n                            </Link>\n                        </div>\n                        <div className=\"col-md-6\" />\n                    </div>\n                    <ProfileHeader profile={profile} />\n                    <ProfileAbout profile={profile} />\n                    <ProfileCreds\n                        education={profile.education}\n                        experience={profile.experience}\n                    />\n                    {profile.githubusername ? (\n                        <ProfileGithub username={profile.githubusername} />\n                    ) : (<p>profile</p>)}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"profile\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">{profileContent}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfile.propTypes = {\n    getProfileByHandle: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getProfileByHandle })(Profile);\n"]},"metadata":{},"sourceType":"module"}