{"ast":null,"code":"var _jsxFileName = \"/Users/oshry/Projects/devconnector/client/src/components/edit-profile/EditProfile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport InputGroup from '../common/InputGroup';\nimport SelectListGroup from '../common/SelectListGroup';\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\n\nclass CreateProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displaySocialInputs: false,\n      handle: '',\n      company: '',\n      website: '',\n      location: '',\n      status: '',\n      skills: '',\n      githubusername: '',\n      bio: '',\n      twitter: '',\n      facebook: '',\n      linkedin: '',\n      youtube: '',\n      instagram: '',\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  } // onLoad bring current user\n\n\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    if (nextProps.profile.profile) {\n      const profile = nextProps.profile.profile; // Bring skills array back to CSV\n\n      const skillsCSV = profile.skills.join(','); // If profile field doesnt exist, make empty string\n\n      profile.company = !isEmpty(profile.company) ? profile.company : '';\n      profile.website = !isEmpty(profile.website) ? profile.website : '';\n      profile.location = !isEmpty(profile.location) ? profile.location : '';\n      profile.githubusername = !isEmpty(profile.githubusername) ? profile.githubusername : '';\n      profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\n      profile.social = !isEmpty(profile.social) ? profile.social : {};\n      profile.twitter = !isEmpty(profile.social.twitter) ? profile.social.twitter : '';\n      profile.facebook = !isEmpty(profile.social.facebook) ? profile.social.facebook : '';\n      profile.linkedin = !isEmpty(profile.social.linkedin) ? profile.social.linkedin : '';\n      profile.youtube = !isEmpty(profile.social.youtube) ? profile.social.youtube : '';\n      profile.instagram = !isEmpty(profile.social.instagram) ? profile.social.instagram : ''; // Set component fields state\n\n      this.setState({\n        handle: profile.handle,\n        company: profile.company,\n        website: profile.website,\n        location: profile.location,\n        status: profile.status,\n        skills: skillsCSV,\n        githubusername: profile.githubusername,\n        bio: profile.bio,\n        twitter: profile.twitter,\n        facebook: profile.facebook,\n        linkedin: profile.linkedin,\n        youtube: profile.youtube,\n        instagram: profile.instagram\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const profileData = {\n      handle: this.state.handle,\n      company: this.state.company,\n      website: this.state.website,\n      location: this.state.location,\n      status: this.state.status,\n      skills: this.state.skills,\n      githubusername: this.state.githubusername,\n      bio: this.state.bio,\n      twitter: this.state.twitter,\n      facebook: this.state.facebook,\n      linkedin: this.state.linkedin,\n      youtube: this.state.youtube,\n      instagram: this.state.instagram\n    };\n    this.props.createProfile(profileData, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          errors = _this$state.errors,\n          displaySocialInputs = _this$state.displaySocialInputs;\n    let socialInputs;\n\n    if (displaySocialInputs) {\n      socialInputs = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        placeholder: \"Twitter Profile URL\",\n        name: \"twitter\",\n        icon: \"fab fa-twitter\",\n        value: this.state.twitter,\n        onChange: this.onChange,\n        error: errors.twitter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"Facebook Page URL\",\n        name: \"facebook\",\n        icon: \"fab fa-facebook\",\n        value: this.state.facebook,\n        onChange: this.onChange,\n        error: errors.facebook,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"Linkedin Profile URL\",\n        name: \"linkedin\",\n        icon: \"fab fa-linkedin\",\n        value: this.state.linkedin,\n        onChange: this.onChange,\n        error: errors.linkedin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"YouTube Channel URL\",\n        name: \"youtube\",\n        icon: \"fab fa-youtube\",\n        value: this.state.youtube,\n        onChange: this.onChange,\n        error: errors.youtube,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        placeholder: \"Instagram Page URL\",\n        name: \"instagram\",\n        icon: \"fab fa-instagram\",\n        value: this.state.instagram,\n        onChange: this.onChange,\n        error: errors.instagram,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }));\n    } // Select options for status\n\n\n    const options = [{\n      label: '* Select Professional Status',\n      value: 0\n    }, {\n      label: 'Developer',\n      value: 'Developer'\n    }, {\n      label: 'Junior Developer',\n      value: 'Junior Developer'\n    }, {\n      label: 'Senior Developer',\n      value: 'Senior Developer'\n    }, {\n      label: 'Manager',\n      value: 'Manager'\n    }, {\n      label: 'Student or Learning',\n      value: 'Student or Learning'\n    }, {\n      label: 'Instructor or Teacher',\n      value: 'Instructor or Teacher'\n    }, {\n      label: 'Intern',\n      value: 'Intern'\n    }, {\n      label: 'Other',\n      value: 'Other'\n    }];\n    return React.createElement(\"div\", {\n      className: \"create-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/dashboard\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Go Back\"), React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(\"small\", {\n      className: \"d-block pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"* = required fields\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(TextFieldGroup, {\n      placeholder: \"* Profile Handle\",\n      name: \"handle\",\n      value: this.state.handle,\n      onChange: this.onChange,\n      error: errors.handle,\n      info: \"A unique handle for your profile URL. Your full name, company name, nickname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(SelectListGroup, {\n      placeholder: \"Status\",\n      name: \"status\",\n      value: this.state.status,\n      onChange: this.onChange,\n      options: options,\n      error: errors.status,\n      info: \"Give us an idea of where you are at in your career\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Company\",\n      name: \"company\",\n      value: this.state.company,\n      onChange: this.onChange,\n      error: errors.company,\n      info: \"Could be your own company or one you work for\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Website\",\n      name: \"website\",\n      value: this.state.website,\n      onChange: this.onChange,\n      error: errors.website,\n      info: \"Could be your own website or a company one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Location\",\n      name: \"location\",\n      value: this.state.location,\n      onChange: this.onChange,\n      error: errors.location,\n      info: \"City or city & state suggested (eg. Boston, MA)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"* Skills\",\n      name: \"skills\",\n      value: this.state.skills,\n      onChange: this.onChange,\n      error: errors.skills,\n      info: \"Please use comma separated values (eg. HTML,CSS,JavaScript,PHP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), React.createElement(TextFieldGroup, {\n      placeholder: \"Github Username\",\n      name: \"githubusername\",\n      value: this.state.githubusername,\n      onChange: this.onChange,\n      error: errors.githubusername,\n      info: \"If you want your latest repos and a Github link, include your username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(TextAreaFieldGroup, {\n      placeholder: \"Short Bio\",\n      name: \"bio\",\n      value: this.state.bio,\n      onChange: this.onChange,\n      error: errors.bio,\n      info: \"Tell us a little about yourself\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.setState(prevState => ({\n          displaySocialInputs: !prevState.displaySocialInputs\n        }));\n      },\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Add Social Network Links\"), React.createElement(\"span\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Optional\")), socialInputs, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn-info btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }))))));\n  }\n\n} //  createProfile, getCurrentProfile for edit\n\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  errors: state.errors\n}); // getCurrentProfile for editing\n\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/components/edit-profile/EditProfile.js"],"names":["React","Component","connect","Link","withRouter","PropTypes","TextFieldGroup","TextAreaFieldGroup","InputGroup","SelectListGroup","createProfile","getCurrentProfile","isEmpty","CreateProfile","constructor","props","state","displaySocialInputs","handle","company","website","location","status","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","errors","onChange","bind","onSubmit","componentDidMount","componentWillReceiveProps","nextProps","setState","profile","skillsCSV","join","social","e","preventDefault","profileData","history","target","name","value","render","socialInputs","options","label","prevState","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport TextAreaFieldGroup from '../common/TextAreaFieldGroup';\nimport InputGroup from '../common/InputGroup';\nimport SelectListGroup from '../common/SelectListGroup';\nimport { createProfile, getCurrentProfile } from '../../actions/profileActions';\nimport isEmpty from '../../validation/is-empty';\n\nclass CreateProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displaySocialInputs: false,\n            handle: '',\n            company: '',\n            website: '',\n            location: '',\n            status: '',\n            skills: '',\n            githubusername: '',\n            bio: '',\n            twitter: '',\n            facebook: '',\n            linkedin: '',\n            youtube: '',\n            instagram: '',\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    // onLoad bring current user\n    componentDidMount() {\n        this.props.getCurrentProfile();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n\n        if (nextProps.profile.profile) {\n            const profile = nextProps.profile.profile;\n\n            // Bring skills array back to CSV\n            const skillsCSV = profile.skills.join(',');\n\n            // If profile field doesnt exist, make empty string\n            profile.company = !isEmpty(profile.company) ? profile.company : '';\n            profile.website = !isEmpty(profile.website) ? profile.website : '';\n            profile.location = !isEmpty(profile.location) ? profile.location : '';\n            profile.githubusername = !isEmpty(profile.githubusername)\n                ? profile.githubusername\n                : '';\n            profile.bio = !isEmpty(profile.bio) ? profile.bio : '';\n            profile.social = !isEmpty(profile.social) ? profile.social : {};\n            profile.twitter = !isEmpty(profile.social.twitter)\n                ? profile.social.twitter\n                : '';\n            profile.facebook = !isEmpty(profile.social.facebook)\n                ? profile.social.facebook\n                : '';\n            profile.linkedin = !isEmpty(profile.social.linkedin)\n                ? profile.social.linkedin\n                : '';\n            profile.youtube = !isEmpty(profile.social.youtube)\n                ? profile.social.youtube\n                : '';\n            profile.instagram = !isEmpty(profile.social.instagram)\n                ? profile.social.instagram\n                : '';\n\n            // Set component fields state\n            this.setState({\n                handle: profile.handle,\n                company: profile.company,\n                website: profile.website,\n                location: profile.location,\n                status: profile.status,\n                skills: skillsCSV,\n                githubusername: profile.githubusername,\n                bio: profile.bio,\n                twitter: profile.twitter,\n                facebook: profile.facebook,\n                linkedin: profile.linkedin,\n                youtube: profile.youtube,\n                instagram: profile.instagram\n            });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const profileData = {\n            handle: this.state.handle,\n            company: this.state.company,\n            website: this.state.website,\n            location: this.state.location,\n            status: this.state.status,\n            skills: this.state.skills,\n            githubusername: this.state.githubusername,\n            bio: this.state.bio,\n            twitter: this.state.twitter,\n            facebook: this.state.facebook,\n            linkedin: this.state.linkedin,\n            youtube: this.state.youtube,\n            instagram: this.state.instagram\n        };\n\n        this.props.createProfile(profileData, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors, displaySocialInputs } = this.state;\n\n        let socialInputs;\n\n        if (displaySocialInputs) {\n            socialInputs = (\n                <div>\n                    <InputGroup\n                        placeholder=\"Twitter Profile URL\"\n                        name=\"twitter\"\n                        icon=\"fab fa-twitter\"\n                        value={this.state.twitter}\n                        onChange={this.onChange}\n                        error={errors.twitter}\n                    />\n\n                    <InputGroup\n                        placeholder=\"Facebook Page URL\"\n                        name=\"facebook\"\n                        icon=\"fab fa-facebook\"\n                        value={this.state.facebook}\n                        onChange={this.onChange}\n                        error={errors.facebook}\n                    />\n\n                    <InputGroup\n                        placeholder=\"Linkedin Profile URL\"\n                        name=\"linkedin\"\n                        icon=\"fab fa-linkedin\"\n                        value={this.state.linkedin}\n                        onChange={this.onChange}\n                        error={errors.linkedin}\n                    />\n\n                    <InputGroup\n                        placeholder=\"YouTube Channel URL\"\n                        name=\"youtube\"\n                        icon=\"fab fa-youtube\"\n                        value={this.state.youtube}\n                        onChange={this.onChange}\n                        error={errors.youtube}\n                    />\n\n                    <InputGroup\n                        placeholder=\"Instagram Page URL\"\n                        name=\"instagram\"\n                        icon=\"fab fa-instagram\"\n                        value={this.state.instagram}\n                        onChange={this.onChange}\n                        error={errors.instagram}\n                    />\n                </div>\n            );\n        }\n\n        // Select options for status\n        const options = [\n            { label: '* Select Professional Status', value: 0 },\n            { label: 'Developer', value: 'Developer' },\n            { label: 'Junior Developer', value: 'Junior Developer' },\n            { label: 'Senior Developer', value: 'Senior Developer' },\n            { label: 'Manager', value: 'Manager' },\n            { label: 'Student or Learning', value: 'Student or Learning' },\n            { label: 'Instructor or Teacher', value: 'Instructor or Teacher' },\n            { label: 'Intern', value: 'Intern' },\n            { label: 'Other', value: 'Other' }\n        ];\n\n        return (\n            <div className=\"create-profile\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to=\"/dashboard\" className=\"btn btn-light\">\n                                Go Back\n                            </Link>\n                            <h1 className=\"display-4 text-center\">Edit Profile</h1>\n                            <small className=\"d-block pb-3\">* = required fields</small>\n                            <form onSubmit={this.onSubmit}>\n                                <TextFieldGroup\n                                    placeholder=\"* Profile Handle\"\n                                    name=\"handle\"\n                                    value={this.state.handle}\n                                    onChange={this.onChange}\n                                    error={errors.handle}\n                                    info=\"A unique handle for your profile URL. Your full name, company name, nickname\"\n                                />\n                                <SelectListGroup\n                                    placeholder=\"Status\"\n                                    name=\"status\"\n                                    value={this.state.status}\n                                    onChange={this.onChange}\n                                    options={options}\n                                    error={errors.status}\n                                    info=\"Give us an idea of where you are at in your career\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Company\"\n                                    name=\"company\"\n                                    value={this.state.company}\n                                    onChange={this.onChange}\n                                    error={errors.company}\n                                    info=\"Could be your own company or one you work for\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Website\"\n                                    name=\"website\"\n                                    value={this.state.website}\n                                    onChange={this.onChange}\n                                    error={errors.website}\n                                    info=\"Could be your own website or a company one\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Location\"\n                                    name=\"location\"\n                                    value={this.state.location}\n                                    onChange={this.onChange}\n                                    error={errors.location}\n                                    info=\"City or city & state suggested (eg. Boston, MA)\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"* Skills\"\n                                    name=\"skills\"\n                                    value={this.state.skills}\n                                    onChange={this.onChange}\n                                    error={errors.skills}\n                                    info=\"Please use comma separated values (eg.\n                    HTML,CSS,JavaScript,PHP\"\n                                />\n                                <TextFieldGroup\n                                    placeholder=\"Github Username\"\n                                    name=\"githubusername\"\n                                    value={this.state.githubusername}\n                                    onChange={this.onChange}\n                                    error={errors.githubusername}\n                                    info=\"If you want your latest repos and a Github link, include your username\"\n                                />\n                                <TextAreaFieldGroup\n                                    placeholder=\"Short Bio\"\n                                    name=\"bio\"\n                                    value={this.state.bio}\n                                    onChange={this.onChange}\n                                    error={errors.bio}\n                                    info=\"Tell us a little about yourself\"\n                                />\n\n                                <div className=\"mb-3\">\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => {\n                                            this.setState(prevState => ({\n                                                displaySocialInputs: !prevState.displaySocialInputs\n                                            }));\n                                        }}\n                                        className=\"btn btn-light\"\n                                    >\n                                        Add Social Network Links\n                                    </button>\n                                    <span className=\"text-muted\">Optional</span>\n                                </div>\n                                {socialInputs}\n                                <input\n                                    type=\"submit\"\n                                    value=\"Submit\"\n                                    className=\"btn btn-info btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n//  createProfile, getCurrentProfile for edit\nCreateProfile.propTypes = {\n    createProfile: PropTypes.func.isRequired,\n    getCurrentProfile: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    errors: state.errors\n});\n\n// getCurrentProfile for editing\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n    withRouter(CreateProfile)\n);\n"]},"metadata":{},"sourceType":"module"}