{"ast":null,"code":"var _jsxFileName = \"/Users/oshry/Projects/devconnector/client/src/components/profiles/Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner'; // import ProfileItem from './ProfileItem';\n\nimport { getProfiles } from '../../actions/profileActions';\n\nclass Profiles extends Component {\n  componentDidMount() {\n    this.props.getProfiles();\n  }\n\n  render() {\n    const _this$props$profile = this.props.profile,\n          profiles = _this$props$profile.profiles,\n          loading = _this$props$profile.loading;\n    let profileItems;\n\n    if (profiles === null || loading) {\n      profileItems = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      });\n    } else {\n      if (profiles.length > 0) {\n        // profileItems = profiles.map(profile => (\n        //     <ProfileItem key={profile._id} profile={profile} />\n        // ));\n        React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"dsdsdsd\");\n      } else {\n        profileItems = React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"No profiles found...\");\n      }\n    }\n\n    return React.createElement(\"div\", {\n      className: \"profiles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Developer Profiles\"), React.createElement(\"p\", {\n      className: \"lead text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Browse and connect with developers\"), profileItems))));\n  }\n\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/components/profiles/Profiles.js"],"names":["React","Component","connect","PropTypes","Spinner","getProfiles","Profiles","componentDidMount","props","render","profile","profiles","loading","profileItems","length","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC7BM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWH,WAAX;AACH;;AAEDI,EAAAA,MAAM,GAAG;AAAA,gCACyB,KAAKD,KAAL,CAAWE,OADpC;AAAA,UACGC,QADH,uBACGA,QADH;AAAA,UACaC,OADb,uBACaA,OADb;AAEL,QAAIC,YAAJ;;AAEA,QAAIF,QAAQ,KAAK,IAAb,IAAqBC,OAAzB,EAAkC;AAC9BC,MAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACH,KAFD,MAEO;AACH,UAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACrB;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,OALD,MAKO;AACHD,QAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAf;AACH;AACJ;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAKKA,YALL,CADJ,CADJ,CADJ,CADJ;AAeH;;AArC4B;;AAwCjCP,QAAQ,CAACS,SAAT,GAAqB;AACjBV,EAAAA,WAAW,EAAEF,SAAS,CAACa,IAAV,CAAeC,UADX;AAEjBP,EAAAA,OAAO,EAAEP,SAAS,CAACe,MAAV,CAAiBD;AAFT,CAArB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,OAAO,EAAEU,KAAK,CAACV;AADe,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEd,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,QAA1C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner';\n// import ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profileActions';\n\nclass Profiles extends Component {\n    componentDidMount() {\n        this.props.getProfiles();\n    }\n\n    render() {\n        const { profiles, loading } = this.props.profile;\n        let profileItems;\n\n        if (profiles === null || loading) {\n            profileItems = <Spinner />;\n        } else {\n            if (profiles.length > 0) {\n                // profileItems = profiles.map(profile => (\n                //     <ProfileItem key={profile._id} profile={profile} />\n                // ));\n                <h1>dsdsdsd</h1>\n            } else {\n                profileItems = <h4>No profiles found...</h4>;\n            }\n        }\n\n        return(\n            <div className=\"profiles\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Developer Profiles</h1>\n                            <p className=\"lead text-center\">\n                                Browse and connect with developers\n                            </p>\n                            {profileItems}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n"]},"metadata":{},"sourceType":"module"}