{"ast":null,"code":"import axios from 'axios';\nimport { ADD_POST, GET_ERRORS, CLEAR_ERRORS, GET_POSTS, GET_POST, POST_LOADING, DELETE_POST } from './types'; // Add Post\n\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios.post('/api/posts', postData).then(res => dispatch({\n    type: ADD_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Get Posts\n\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios.get('/api/posts').then(res => dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POSTS,\n    payload: null\n  }));\n}; // Get Post\n\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios.get(\"/api/posts/\".concat(id)).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POST,\n    payload: null\n  }));\n}; // Delete Post\n\nexport const deletePost = id => dispatch => {\n  axios.delete(\"/api/posts/\".concat(id)).then(res => dispatch({\n    type: DELETE_POST,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Like\n\nexport const addLike = id => dispatch => {\n  axios.post(\"/api/posts/like/\".concat(id)).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Remove Like\n\nexport const removeLike = id => dispatch => {\n  axios.post(\"/api/posts/unlike/\".concat(id)).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Comment\n\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios.post(\"/api/posts/comment/\".concat(postId), commentData).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Delete Comment\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(\"/api/posts/comment/\".concat(postId, \"/\").concat(commentId)).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set loading state\n\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/actions/postActions.js"],"names":["axios","ADD_POST","GET_ERRORS","CLEAR_ERRORS","GET_POSTS","GET_POST","POST_LOADING","DELETE_POST","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nimport {\n    ADD_POST,\n    GET_ERRORS,\n    CLEAR_ERRORS,\n    GET_POSTS,\n    GET_POST,\n    POST_LOADING,\n    DELETE_POST\n} from './types';\n\n// Add Post\nexport const addPost = postData => dispatch => {\n    dispatch(clearErrors());\n    axios\n        .post('/api/posts', postData)\n        .then(res =>\n            dispatch({\n                type: ADD_POST,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Get Posts\nexport const getPosts = () => dispatch => {\n    dispatch(setPostLoading());\n    axios\n        .get('/api/posts')\n        .then(res =>\n            dispatch({\n                type: GET_POSTS,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_POSTS,\n                payload: null\n            })\n        );\n};\n\n// Get Post\nexport const getPost = id => dispatch => {\n    dispatch(setPostLoading());\n    axios\n        .get(`/api/posts/${id}`)\n        .then(res =>\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_POST,\n                payload: null\n            })\n        );\n};\n\n// Delete Post\nexport const deletePost = id => dispatch => {\n    axios\n        .delete(`/api/posts/${id}`)\n        .then(res =>\n            dispatch({\n                type: DELETE_POST,\n                payload: id\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Add Like\nexport const addLike = id => dispatch => {\n    axios\n        .post(`/api/posts/like/${id}`)\n        .then(res => dispatch(getPosts()))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Remove Like\nexport const removeLike = id => dispatch => {\n    axios\n        .post(`/api/posts/unlike/${id}`)\n        .then(res => dispatch(getPosts()))\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n    dispatch(clearErrors());\n    axios\n        .post(`/api/posts/comment/${postId}`, commentData)\n        .then(res =>\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n    axios\n        .delete(`/api/posts/comment/${postId}/${commentId}`)\n        .then(res =>\n            dispatch({\n                type: GET_POST,\n                payload: res.data\n            })\n        )\n        .catch(err =>\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            })\n        );\n};\n\n// Set loading state\nexport const setPostLoading = () => {\n    return {\n        type: POST_LOADING\n    };\n};\n\n// Clear errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n};\n"]},"metadata":{},"sourceType":"module"}