{"ast":null,"code":"var _jsxFileName = \"/Users/oshry/Projects/devconnector/client/src/components/post/Post.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport Spinner from '../common/Spinner';\nimport { Link } from 'react-router-dom';\nimport { getPost } from '../../actions/postActions';\n\nclass Post extends Component {\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.id);\n  }\n\n  render() {\n    const _this$props$post = this.props.post,\n          post = _this$props$post.post,\n          loading = _this$props$post.loading;\n    let postContent;\n\n    if (post === null || loading || Object.keys(post).length === 0) {\n      postContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      });\n    } else {\n      postContent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(PostItem, {\n        post: post,\n        showActions: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(CommentForm, {\n        postId: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"post \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/feed\",\n      className: \"btn btn-light mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Back To Feed\"), postContent))));\n  }\n\n}\n\nPost.propTypes = {\n  getPost: Proptypes.func.isRequired,\n  post: Proptypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/components/post/Post.js"],"names":["React","Component","connect","Proptypes","PostItem","CommentForm","Spinner","Link","getPost","Post","componentDidMount","props","match","params","id","render","post","loading","postContent","Object","keys","length","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AACzBS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWH,OAAX,CAAmB,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,6BACqB,KAAKJ,KAAL,CAAWK,IADhC;AAAA,UACGA,IADH,oBACGA,IADH;AAAA,UACSC,OADT,oBACSA,OADT;AAEL,QAAIC,WAAJ;;AACA,QAAGF,IAAI,KAAK,IAAT,IAAiBC,OAAjB,IAA4BE,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,KAA6B,CAA5D,EAA8D;AAC1DH,MAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH,KAFD,MAEK;AACDA,MAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,IAAI,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAAd;AAIH;;AACD,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,SAAS,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAIKJ,WAJL,CADJ,CADJ,CADJ,CADJ;AAcH;;AA9BwB;;AAiC7BT,IAAI,CAACc,SAAL,GAAiB;AACbf,EAAAA,OAAO,EAAEL,SAAS,CAACqB,IAAV,CAAeC,UADX;AAEbT,EAAAA,IAAI,EAAEb,SAAS,CAACuB,MAAV,CAAiBD;AAFV,CAAjB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC/BZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADmB,CAAL,CAA7B;;AAIA,eAAed,OAAO,CAACyB,eAAD,EAAiB;AAAEnB,EAAAA;AAAF,CAAjB,CAAP,CAAsCC,IAAtC,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Proptypes from 'prop-types';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from './CommentForm';\nimport Spinner from '../common/Spinner';\nimport { Link } from 'react-router-dom';\nimport { getPost } from '../../actions/postActions';\n\nclass Post extends Component {\n    componentDidMount() {\n        this.props.getPost(this.props.match.params.id);\n    }\n\n    render() {\n        const { post, loading } = this.props.post;\n        let postContent;\n        if(post === null || loading || Object.keys(post).length === 0){\n            postContent = <Spinner/>\n        }else{\n            postContent = <div>\n                            <PostItem post={post} showActions={false}/>\n                            <CommentForm postId={post._id} />\n                          </div>\n        }\n        return (\n            <div className=\"post \">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <Link to=\"/feed\" className=\"btn btn-light mb-3\">\n                                Back To Feed\n                            </Link>\n                            {postContent}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPost.propTypes = {\n    getPost: Proptypes.func.isRequired,\n    post: Proptypes.object.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n   post: state.post\n});\n\nexport default connect(mapStateToProps,{ getPost } )(Post);\n"]},"metadata":{},"sourceType":"module"}