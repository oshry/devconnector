{"ast":null,"code":"var _jsxFileName = \"/Users/oshry/Projects/devconnector/client/src/components/dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profileActions';\nimport Spinner from '../common/Spinner';\nimport ProfileActions from './ProfileActions'; // import Experience from './Experience';\n// import Education from './Education';\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getCurrentProfile();\n  }\n\n  render() {\n    // const { user } = this.props.auth;\n    // const { profile, loading } = this.props.profile;\n    // let dashboardContent;\n    // if (profile === null || loading) {\n    //     dashboardContent = <Spinner />;\n    // } else {\n    //     // Check if logged in user has profile data\n    //     if (Object.keys(profile).length > 0) {\n    //         dashboardContent = (\n    //             <div>\n    //                 <p className=\"lead text-muted\">\n    //                     Welcome <Link to={`/profile/${profile.handle}`}>{user.name}</Link>\n    //                 </p>\n    //                 <ProfileActions />\n    //                 <Experience experience={profile.experience} />\n    //                 <Education education={profile.education} />\n    //                 <div style={{ marginBottom: '60px' }} />\n    //                 <button\n    //                     onClick={this.onDeleteClick.bind(this)}\n    //                     className=\"btn btn-danger\"\n    //                 >\n    //                     Delete My Account\n    //                 </button>\n    //             </div>\n    //         );\n    //     } else {\n    //         // User is logged in but has no profile\n    //         dashboardContent = (\n    //             <div>\n    //                 <p className=\"lead text-muted\">Welcome {user.name}</p>\n    //                 <p>You have not yet setup a profile, please add some info</p>\n    //                 <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\n    //                     Create Profile\n    //                 </Link>\n    //             </div>\n    //         );\n    //     }\n    // }\n    return React.createElement(\"div\", {\n      className: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Dashboard\")))));\n  }\n\n}\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);","map":{"version":3,"sources":["/Users/oshry/Projects/devconnector/client/src/components/dashboard/Dashboard.js"],"names":["React","Component","Link","PropTypes","connect","getCurrentProfile","Spinner","ProfileActions","Dashboard","componentDidMount","props","render","propTypes","func","isRequired","deleteAccount","auth","object","profile","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;AACA;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,iBAAX;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ,CADJ,CADJ,CADJ;AAYH;;AA3D6B;;AA8DlCH,SAAS,CAACI,SAAV,GAAsB;AAClBP,EAAAA,iBAAiB,EAAEF,SAAS,CAACU,IAAV,CAAeC,UADhB;AAElBC,EAAAA,aAAa,EAAEZ,SAAS,CAACU,IAAV,CAAeC,UAFZ;AAGlBE,EAAAA,IAAI,EAAEb,SAAS,CAACc,MAAV,CAAiBH,UAHL;AAIlBI,EAAAA,OAAO,EAAEf,SAAS,CAACc,MAAV,CAAiBH;AAJR,CAAtB;;AAOA,MAAMK,eAAe,GAAGC,KAAK,KAAK;AAC9BF,EAAAA,OAAO,EAAEE,KAAK,CAACF,OADe;AAE9BF,EAAAA,IAAI,EAAEI,KAAK,CAACJ;AAFkB,CAAL,CAA7B;;AAKA,eAAeZ,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,iBAAF;AAAqBU,EAAAA;AAArB,CAAlB,CAAP,CACXP,SADW,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile} from '../../actions/profileActions';\nimport Spinner from '../common/Spinner';\nimport ProfileActions from './ProfileActions';\n// import Experience from './Experience';\n// import Education from './Education';\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getCurrentProfile();\n    }\n\n    render() {\n        // const { user } = this.props.auth;\n        // const { profile, loading } = this.props.profile;\n\n        // let dashboardContent;\n\n        // if (profile === null || loading) {\n        //     dashboardContent = <Spinner />;\n        // } else {\n        //     // Check if logged in user has profile data\n        //     if (Object.keys(profile).length > 0) {\n        //         dashboardContent = (\n        //             <div>\n        //                 <p className=\"lead text-muted\">\n        //                     Welcome <Link to={`/profile/${profile.handle}`}>{user.name}</Link>\n        //                 </p>\n        //                 <ProfileActions />\n        //                 <Experience experience={profile.experience} />\n        //                 <Education education={profile.education} />\n        //                 <div style={{ marginBottom: '60px' }} />\n        //                 <button\n        //                     onClick={this.onDeleteClick.bind(this)}\n        //                     className=\"btn btn-danger\"\n        //                 >\n        //                     Delete My Account\n        //                 </button>\n        //             </div>\n        //         );\n        //     } else {\n        //         // User is logged in but has no profile\n        //         dashboardContent = (\n        //             <div>\n        //                 <p className=\"lead text-muted\">Welcome {user.name}</p>\n        //                 <p>You have not yet setup a profile, please add some info</p>\n        //                 <Link to=\"/create-profile\" className=\"btn btn-lg btn-info\">\n        //                     Create Profile\n        //                 </Link>\n        //             </div>\n        //         );\n        //     }\n        // }\n\n        return (\n            <div className=\"dashboard\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4\">Dashboard</h1>\n                            {/*{dashboardContent}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    getCurrentProfile: PropTypes.func.isRequired,\n    deleteAccount: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    profile: state.profile,\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n    Dashboard\n);\n"]},"metadata":{},"sourceType":"module"}